import org.apache.tools.ant.taskdefs.condition.Os
import org.apache.tools.ant.filters.*

ext {
  componentName='Interlok AWS/S3'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile "com.amazonaws:aws-java-sdk-s3:$awsSDKVersion"

    compile project(':interlok-aws-common')

    testCompile 'org.mockito:mockito-all:1.10.19'
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task examplesJar(type: Jar, dependsOn: test) {
    classifier = 'examples'
    from new File(buildDir, '/examples')
}
jar {
  manifest {
    attributes("Built-By": System.getProperty('user.name'),
              "Build-Jdk": System.getProperty('java.version'),
              "Implementation-Title": componentName,
              "Implementation-Version": project.version,
              "Implementation-Vendor-Id": project.group,
              "Implementation-Vendor": organizationName)
  }
}

artifacts {
    archives javadocJar
    archives examplesJar
}

publishing {
  publications {
      mavenJava(MavenPublication) {
          from components.java

          artifact javadocJar { classifier "javadoc" }
          artifact examplesJar { classifier "examples" }
          pom.withXml {
            asNode().appendNode("name", componentName)
            asNode().appendNode("description", "Services that interact (upload/download/delete) with AWS S3 Buckets and artefacts")
            def properties = asNode().appendNode("properties")
            properties.appendNode("target", "3.3.0+")
            properties.appendNode("tags", "aws,s3")
            properties.appendNode("license", "false")
          }
      }
  }
  repositories {
    maven {
      credentials {
        username repoUsername
        password repoPassword
      }
      url mavenPublishUrl
    }
  }
}

processTestResources.dependsOn copyUnitTestProperties
javadoc.dependsOn offlinePackageList